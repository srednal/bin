# .bashrc

# get standard system stuff
[ -f /etc/bashrc ] && . /etc/bashrc


# Path manipulation

# test if in path
function _inpath {
   echo ${PATH} | egrep -q "(^|:)${1}($|:)"
}
# add to end of path unless already there or not exist
function _topath {
  if [ -n "${1}" ]; then
    _inpath ${1} || [ ! -d ${1} ] || PATH=${PATH}:${1}
    shift
    _topath ${*}
  fi
}

_topath /usr/bin /bin /usr/sbin /sbin
_topath /usr/local/bin /opt/X11/bin

# _topath ~/bin/p4scripts
# _topath /usr/local/mysql/bin

# these always go at the head (before installed stuff)
PATH=${HOME}/bin:${HOME}/dev/srednal/bin:${PATH}

export PATH

MANPATH=/usr/share/man:/usr/local/share/man:/usr/X11/man:/usr/X11R6/share/man
MANPATH=${MANPATH}:/usr/local/git/share/man
export MANPATH

export CLASSPATH=.

RUBYLIB=${HOME}/bin/ruby
# RUBYLIB=${RUBYLIB}:${HOME}/bin/p4scripts/ruby
export RUBYLIB

#####################

# Set up bash completion
if [ "$PS1" -a -f ${HOME}/.bash_completion ]; then # interactive shell
    . ${HOME}/.bash_completion

    # Prompt string: last part of directory, with red exit status if non-zero
    mk_prompt() {
        if [ $? == 0 ]; then
            PS1='...\W \$ '
        else
            PS1='...\W \[\033[1;31m\][$?]\[\033[m\] \$ '
        fi
    }
    PROMPT_COMMAND=mk_prompt
fi

# Ignore emacs backup files for file completes
export FIGNORE='~'

# Takes more than one ^D to exit the shell
export IGNOREEOF=2

# Repeated commands only go in history once
export HISTCONTROL=ignoredups

# Don't want ~/.bash_history
unset HISTFILE
#export HISTFILESIZE=0

# Colorized ls - BSD (Mac OS X)
export CLICOLOR=
# set colors to work with my term colors, etc
export LSCOLORS=dxcxbxbxgxbxbxBxBxDxDx



# Command line edit mode = emacs
#set -o emacs

# Make Bash 8bit clean
#bind 'set meta-flag on'
#bind 'set convert-meta off'
#bind 'set output-meta on'

# Glob files without case sensitivity
#shopt -s nocaseglob

# Ignore case while completing files
#bind 'set completion-ignore-case on'

# Show ambiguous completions immediately rather than ringing bell?
#bind 'set show-all-if-ambiguous off'

# List completions left-to-right rather than top-down
#bind 'set print-completions-horizontally on'

# Show file type when listing completions
bind 'set visible-stats on'

# rsync uses ssh
# RSYNC_RSH=ssh

##################################################################
# Aliases and Functions

# Remove unwanted files
alias purge='rm -f *~ .??*~ \#*\#'
alias rpurge='find . \( -name  "*~" -o -name ".??*~" -o -name "\#*\#" \) -print | xargs rm -f'

# Command aliases

export LESS='-eRX'
alias more='less'
alias readme='less *[Rr][Ee][Aa][Dd]*[Mm][Ee]*'
alias h=history

function dash { open dash://man:"$*" ; }

# # Everything in ~/bin/java/*.class is to be started with java
# for p in `cd ${HOME}/bin/java/; ls *.class 2>/dev/null`;
# do
#     # strip off the .class
#     q=`echo $p | sed -e "s/\.class$//"`
#     alias $q='java -classpath ${HOME}/bin/java:${CLASSPATH} '$q
# done
# unset -v p q

# directory listings
if [ `uname -s` = "Darwin" ]; then
    # include file locks in long ls
    alias ll='ls -lho'
    alias lla='ls -lhao'
    function lld { ls -lao $* | grep "^d" ; }
    function llf { ls -lao $* | grep "^-" ; }
else
    alias ll='ls -l'
    alias lla='ls -la'
    function lld { ls -la $* | grep "^d" ; }
    function llf { ls -la $* | grep "^-" ; }
fi

# Crutches for cd operations

# expand sym links
set -P

# cdlinks contains useful symlinks for quick chdirs
#export CDPATH='.:~/cdlinks'

alias cd..='cd ..'
alias back='cd -'

# Undo links in pwd
#alias cdul='cd -P .'

# dump jar manifest
function mf { unzip -p $1 META-INF/MANIFEST.MF ; }
# unzip to new dir
function uzdir { n=`basename ${1}.dir` ; mkdir $n ; unzip -d $n $1 ; }

################################################################
# Build / SCM settings

# java
function jdk() {
    # -q means quiet, else runs java -version after setting
    local _q=0
    if [ "$1" == '-q' ]; then
        _q=1
        shift
    fi
    local _v="$@"
    # allow shortcut jdk 7 meaning jdk 1.7
    if [ "$_v" = 6 -o "$_v" = 7 -o "$_v" = 8 ]; then
        _v="1.$_v"
    fi
    # if no version given, don't set anything (just do java -version)
    [ -z "$_v" ] || export JAVA_HOME=`/usr/libexec/java_home -v $_v`
    [ $_q = 1 ] || java -version
}
jdk -q 1.8


function gradle {
  if [ -x './gradlew' ]; then
    ./gradlew "$@"
  else
    /usr/local/bin/gradle "$@"
  fi
}

# maven
#export MAVEN_OPTS='-Xmx512m -Djava.awt.headless=true'

# ant (brew info ant)
#export ANT_OPTS='-XX:MaxPermSize=256m -Xmx512m -Djava.awt.headless=true'

# P4
# Use .p4config file(s) for local p4 settings
#export P4CONFIG=".p4config"

# Example contents of .p4config:
# P4HOST=davespbook.local
# P4PORT=bunkerhill.bea.com:6999
# P4CLIENT=landers.davespbook
# P4PASSWD=clear-text-or-hashed
# for hashed password, on windows run p4 passwd, then p4 set P4PASSWD

#export P4EDITOR=vi
#export P4DIFF=diff
